{"version":3,"sources":["components/Unauthenticated.js","services/ResumeService.js","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["Unauthenticated","Box","m","pl","pr","Typography","mt","mb","pb","pt","id","variant","component","url","defaultTheme","createTheme","useStyles","makeStyles","theme","root","padding","spacing","justifyContent","display","alignItems","flexWrap","textField","breakpoints","down","width","marginRight","borderBottom","palette","divider","QuickSearchToolbar","props","classes","className","TextField","value","onChange","placeholder","InputProps","startAdornment","fontSize","endAdornment","IconButton","title","size","style","visibility","onClick","clearSearch","Main","React","useState","privacy","checkBox","setCheckBox","auth","setAuth","studentAuth","setStudentAuth","loginClose","setOpenModal","openModal","modalPost","setModalPost","openPost","closePost","name","setName","link","setLink","major","setMajor","tags","setTags","status","setStatus","searchText","setSearchText","requestSearch","searchValue","type","searchRegex","RegExp","replace","filteredRows","approved","filter","row","Object","keys","some","field","test","toString","setStudentApprovedRows","setApprovedFiltered","pending","setPendingFiltered","setApproved","setPending","studentApprovedRows","approvedFiltered","pendingFiltered","currentId","setCurrentId","getData","axios","get","then","res","rowsApproved","rowsPending","data","forEach","element","push","_id","resume","deleteResume","delete","updateResume","put","postSubmit","post","position","top","left","transform","bgcolor","border","boxShadow","p","columnsPending","headerName","renderCell","col","Button","marginLeft","href","target","columnsApproved","studentApproved","AppBar","Toolbar","edge","color","sx","mr","Home","flexGrow","Modal","open","onClose","label","onInput","e","FormControlLabel","control","Checkbox","checked","event","disabled","height","components","rows","columns","pageSize","rowsPerPageOptions","checkboxSelection","onSelectionModelChange","length","componentsProps","toolbar","owsPerPageOptions","ml","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7bbca799.chunk.js","sourcesContent":["import React from 'react';\nimport { Typography, Box } from \"@mui/material\";\n\n\nexport default function Unauthenticated() {\n    return (\n        <Box m={6} pl={4} pr={4}>\n            <Typography mt={2} mb={2} pb={3} pt={3} id=\"modal-modal-title\" variant=\"h6\" component=\"h5\">\n                Welcome to the Honors Carolina Resume App!\n            </Typography>\n            <Typography mt={2} mb={2} pb={3} id=\"modal-modal-title\" variant=\"p\" component=\"p\">\n                This is a bare bones skeleton of the app. At the moment the authentication via Shiolbeth sso is not setup\n                so put in any value for login/password\n\n                Our backend endpoint is hosted on an ExpressJS API on Openshift @\n                https://honor-carolina-resume-backend-rnarveka.apps.cloudapps.unc.edu/resumes\n            </Typography>\n            <Typography mt={2} mb={2} pb={3} pt={3} id=\"modal-modal-title\" variant=\"h6\" component=\"h5\">\n                API\n            </Typography>\n            <Typography mt={2} mb={2} pb={3} id=\"modal-modal-title\" variant=\"p\" component=\"p\">\n                Exposed Endpoints\n            </Typography>\n            <Typography mt={2} mb={2} pb={3} id=\"modal-modal-title\" variant=\"p\" component=\"p\">\n                GET: https://honor-carolina-resume-backend-rnarveka.apps.cloudapps.unc.edu/resumes\n            </Typography>\n            <Typography mt={2} mb={2} pb={3} id=\"modal-modal-title\" variant=\"p\" component=\"p\">\n                GET: https://honor-carolina-resume-backend-rnarveka.apps.cloudapps.unc.edu/resumes/mongoResumeID\n            </Typography>\n            <Typography mt={2} mb={2} pb={3} id=\"modal-modal-title\" variant=\"p\" component=\"p\">\n                POST: https://honor-carolina-resume-backend-rnarveka.apps.cloudapps.unc.edu/resumes/\n            </Typography>\n            <Typography mt={2} mb={2} pb={3} id=\"modal-modal-title\" variant=\"p\" component=\"p\">\n                DELETE: https://honor-carolina-resume-backend-rnarveka.apps.cloudapps.unc.edu/resumes/mongoResumeID\n            </Typography>\n            <Typography mt={2} mb={2} pb={3} pt={3} id=\"modal-modal-title\" variant=\"h6\" component=\"h5\">\n                Application Architecture\n            </Typography>\n            <Typography mt={2} mb={2} pb={3} id=\"modal-modal-title\" variant=\"p\" component=\"p\">\n                This app runs primarily on UNC CloudApps based on the OpenShift 4 Platform. The Backend ExpressJS\n                app exposes RestFull endpoints and enables data transfer to MongoDB. The Front End is a React App based\n                on MaterialUI and will soon be hosted on OpenShift after ITS bumps up our memmory requirments for Openshift\n                Pods.\n            </Typography>\n        </Box>\n    )\n}","import axios from \"axios\";\n\nconst url = \"https://honor-carolina-resume-backend-rnarveka.apps.cloudapps.unc.edu/resumes/\"\n\nexport function getAll() {\n    return axios.get(url)\n}\n\nexport function get(id) {\n    return axios.get(url + id)\n}\n\nexport function post(name, link, major, tags, status) {\n    return axios.post(url, {\n            \"name\": name,\n            \"link\": link,\n            \"major\": major,\n            \"tags\": tags,\n            \"approved\": status\n    })\n}\n\nexport function del(id) {\n    return axios.delete(url + id)\n}\n\nexport function update(id) {\n    return axios.put(url + id, {\n            \"approved\": \"approved\"\n    })\n}\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport Unauthenticated from \"./Unauthenticated\";\nimport { AppBar, Toolbar, Typography, Modal, Box, TextField, Button, IconButton, FormControlLabel, Checkbox } from \"@mui/material\";\nimport { Home } from \"@mui/icons-material\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport ClearIcon from '@material-ui/icons/Clear';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { createTheme } from '@material-ui/core/styles';\nimport { makeStyles } from '@material-ui/styles';\nimport { getAll, post, update, del } from \"../services/ResumeService\";\n\n// Data Grid Toolbar styles\nfunction escapeRegExp(value) {\n    return value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\nconst defaultTheme = createTheme();\nconst useStyles = makeStyles(\n    (theme) => ({\n        root: {\n            padding: theme.spacing(0.5, 0.5, 0),\n            justifyContent: 'space-between',\n            display: 'flex',\n            alignItems: 'flex-start',\n            flexWrap: 'wrap',\n        },\n        textField: {\n            [theme.breakpoints.down('xs')]: {\n                width: '100%',\n            },\n            margin: theme.spacing(1, 0.5, 1.5),\n            '& .MuiSvgIcon-root': {\n                marginRight: theme.spacing(0.5),\n            },\n            '& .MuiInput-underline:before': {\n                borderBottom: `1px solid ${theme.palette.divider}`,\n            },\n        },\n    }),\n    { defaultTheme },\n);\n\n// Search Toolbar Code\nQuickSearchToolbar.propTypes = {\n    clearSearch: PropTypes.func.isRequired,\n    onChange: PropTypes.func.isRequired,\n    value: PropTypes.string.isRequired,\n};\nfunction QuickSearchToolbar(props) {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <Typography mt={2} mb={2} pb={3} id=\"modal-modal-title\" variant=\"h6\" component=\"h5\">\n                Search\n            </Typography>\n            <TextField variant=\"standard\" value={props.value} onChange={props.onChange} placeholder=\"Search…\" className={classes.textField}\n                InputProps={{\n                    startAdornment: <SearchIcon fontSize=\"small\" />, endAdornment: (\n                        <IconButton title=\"Clear\" aria-label=\"Clear\" size=\"small\" style={{ visibility: props.value ? 'visible' : 'hidden' }} onClick={props.clearSearch}>\n                            <ClearIcon fontSize=\"small\" />\n                        </IconButton>),\n                }}\n            />\n        </div>\n    );\n}\n\nexport default function Main() {\n\n    //State handlers for checkbox's\n    const [checkBox, setCheckBox] = React.useState({\n        privacy: false\n    })\n    const handleChange = (event) => {\n        setCheckBox({\n            ...checkBox,\n            [event.target.name]: event.target.checked,\n        });\n    };\n    const { privacy } = checkBox;\n\n    // auth values, auth will be true for admin, studentAuth will be true for studentAuth\n    const [auth, setAuth] = React.useState(false);\n    const [studentAuth, setStudentAuth] = React.useState(false);\n    const logIn = () => { setAuth(true) };\n    const studentLogIn = () => { setStudentAuth(true); setStatus(\"pending\"); }\n    const logOut = () => {\n        setAuth(false);\n        setStudentAuth(false);\n    };\n\n    //Modal handlers\n    const loginOpen = () => setOpenModal(true);\n    const loginClose = () => setOpenModal(false);\n    const [openModal, setOpenModal] = React.useState(false);\n    const [modalPost, setModalPost] = React.useState(false);\n    const openPost = () => setModalPost(true);\n    const closePost = () => setModalPost(false);\n\n    //Form value handlers\n    const [name, setName] = React.useState(null);\n    const [link, setLink] = React.useState(null);\n    const [major, setMajor] = React.useState(null);\n    const [tags, setTags] = React.useState(null);\n    const [status, setStatus] = React.useState(\"pending\");\n\n    //Form Submit Actions\n    const adminSubmit = () => {\n        getData();\n        loginClose();\n        logIn();\n    }\n    const studentSubmit = () => {\n        getData();\n        loginClose();\n        studentLogIn();\n    }\n\n    //Search function for data grid\n    const [searchText, setSearchText] = React.useState('');\n    const requestSearch = (searchValue, type) => {\n        setSearchText(searchValue);\n        const searchRegex = new RegExp(escapeRegExp(searchValue), 'i');\n        if (type === \"student\") {\n            const filteredRows = approved.filter((row) => {\n                return Object.keys(row).some((field) => {\n                    return searchRegex.test(row[field].toString());\n                });\n            });\n            setStudentApprovedRows(filteredRows);\n        } else if (type === \"approved\") {\n            const filteredRows = approved.filter((row) => {\n                return Object.keys(row).some((field) => {\n                    return searchRegex.test(row[field].toString());\n                });\n            });\n            setApprovedFiltered(filteredRows);\n        } else {\n            const filteredRows = pending.filter((row) => {\n                return Object.keys(row).some((field) => {\n                    return searchRegex.test(row[field].toString());\n                });\n            });\n            setPendingFiltered(filteredRows);\n        }\n    };\n\n    //set data grid rows for each table\n    const [approved, setApproved] = React.useState(null);\n    const [pending, setPending] = React.useState(null);\n    const [studentApprovedRows, setStudentApprovedRows] = React.useState();\n    const [approvedFiltered, setApprovedFiltered] = React.useState(approved);\n    const [pendingFiltered, setPendingFiltered] = React.useState(pending);\n\n    //set last checked row\n    const [currentId, setCurrentId] = React.useState(null);\n\n    //api functions\n    const getData = () => {\n        getAll().then(res => {\n            let rowsApproved = [];\n            let rowsPending = [];\n            res.data.forEach(element => {\n                if (element.approved === \"approved\") {\n                    rowsApproved.push({\n                        id: element._id,\n                        name: element.name,\n                        major: element.major,\n                        resume: element.link,\n                        tags: element.tags\n                    })\n                } else {\n                    rowsPending.push({\n                        id: element._id,\n                        name: element.name,\n                        major: element.major,\n                        resume: element.link\n                    })\n                }\n            });\n            setApproved(rowsApproved);\n            setStudentApprovedRows(rowsApproved);\n            setApprovedFiltered(rowsApproved)\n            setPending(rowsPending);\n            setPendingFiltered(rowsPending)\n        })\n    }\n    const deleteResume = () => {\n        del(currentId).then(res => {\n            setCurrentId(null);\n            getData();\n        })\n    }\n    const updateResume = () => {\n        update(currentId).then(res => {\n            setCurrentId(null);\n            getData()\n        })\n    }\n    const postSubmit = () => {\n        post(name, link, major, tags, status).then(res => {\n            closePost();\n            getData();\n        })\n    }\n\n    //Data Grid Styling\n    const style = {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        width: 400,\n        bgcolor: 'background.paper',\n        border: '2px solid #000',\n        boxShadow: 24,\n        p: 4,\n        '& > :not(style)': { m: 1, width: '25ch' }\n    };\n\n    //Column setup for Pending DataGrid\n    const columnsPending = [\n        { field: 'id', headerName: 'ID', width: 100 },\n        { field: 'name', headerName: 'Name', width: 150 },\n        { field: 'major', headerName: 'Major', width: 200 },\n        {\n            field: 'resume', headerName: 'Resume', width: 275,\n            renderCell: (col) => (\n                <strong>\n                    <Button\n                        variant=\"contained\"\n                        size=\"small\"\n                        style={{ marginLeft: 16 }}\n                        href={col.value}\n                        target=\"_blank\">View</Button>\n                    <Button\n                        variant=\"contained\"\n                        size=\"small\"\n                        style={{ marginLeft: 16 }}\n                        onClick={updateResume}>Accept</Button>\n                    <Button\n                        variant=\"contained\"\n                        size=\"small\"\n                        style={{ marginLeft: 16 }}\n                        onClick={deleteResume}>Reject</Button>\n                </strong>\n            )\n        },\n    ];\n\n    //Column setup for Approved DataGrid\n    const columnsApproved = [\n        { field: 'id', headerName: 'ID', width: 100 },\n        { field: 'name', headerName: 'Name', width: 150 },\n        { field: 'major', headerName: 'Major', width: 200 },\n        {\n            field: 'resume', headerName: 'Resume', width: 195,\n            renderCell: (col) => (\n                <strong>\n                    <Button\n                        variant=\"contained\"\n                        size=\"small\"\n                        href={col.value}\n                        target=\"_blank\"\n                        style={{ marginLeft: 16 }}>View</Button>\n                    <Button\n                        variant=\"contained\"\n                        size=\"small\"\n                        style={{ marginLeft: 16 }}\n                        onClick={deleteResume}>Delete</Button>\n                </strong>\n            )\n        },\n        { field: 'tags', headerName: 'Tags', width: 400 }\n    ];\n\n    //Column setup for Student DataGrid\n    const studentApproved = [\n        { field: 'id', headerName: 'ID', width: 100 },\n        { field: 'name', headerName: 'Name', width: 150 },\n        { field: 'major', headerName: 'Major', width: 200 },\n        {\n            field: 'resume', headerName: 'Resume', width: 195,\n            renderCell: (col) => (\n                <strong>\n                    <Button\n                        href={col.value}\n                        target=\"_blank\"\n                        variant=\"contained\"\n                        size=\"small\"\n                        style={{ marginLeft: 16 }}>View</Button>\n                </strong>\n            )\n        },\n        { field: 'tags', headerName: 'Tags', width: 400 }\n    ];\n\n    return (\n        <div>\n            <header>\n                <AppBar>\n                    <Toolbar>\n                        <IconButton size=\"large\" edge=\"start\" color=\"inherit\" aria-label=\"menu\" sx={{ mr: 2 }}><Home /></IconButton>\n                        <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n                            Honors Carolina Resume App\n                        </Typography>\n                        <Button onClick={(auth || studentAuth) ? logOut : loginOpen} color=\"inherit\">{(auth || studentAuth) ? \"Logout\" : \"Login\"}</Button>\n                    </Toolbar>\n                </AppBar>\n                <Modal open={openModal} onClose={loginClose}>\n                    <Box sx={style} component=\"form\">\n                        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n                            Login\n                        </Typography>\n                        <TextField id=\"user\" label=\"Username\" variant=\"outlined\" />\n                        <TextField id=\"pass\" label=\"Password\" variant=\"outlined\" type=\"password\" />\n                        <Button onClick={adminSubmit} color=\"inherit\">Admin</Button>\n                        <Button onClick={studentSubmit} color=\"inherit\">Student</Button>\n                    </Box>\n                </Modal>\n                <Modal open={modalPost} onClose={closePost}>\n                    <Box sx={style} component=\"form\">\n                        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\"> New Resume </Typography>\n                        <TextField id=\"name\" label=\"Name\" variant=\"outlined\" onInput={e => setName(e.target.value)} />\n                        <TextField id=\"link\" label=\"Resume Link\" variant=\"outlined\" onInput={e => setLink(e.target.value)} />\n                        <TextField id=\"tag\" label=\"Tags\" variant=\"outlined\" onInput={e => setTags(e.target.value)} />\n                        {auth && <TextField id=\"status\" label=\"Approved/Pending\" variant=\"outlined\" onInput={e => setStatus(e.target.value)} />}\n                        <TextField id=\"major\" label=\"Major\" variant=\"outlined\" onInput={e => setMajor(e.target.value)} />\n                        {studentAuth && <FormControlLabel control={<Checkbox checked={privacy} onChange={handleChange} name=\"privacy\" />} label=\"By checking this box you agree to all privacy policies.\" />}\n                        {auth && <Button onClick={postSubmit} color=\"inherit\">Post Resume</Button>}\n                        {studentAuth && <Button disabled={!privacy} onClick={postSubmit} color=\"inherit\">Post Resume</Button>}\n                    </Box>\n                </Modal>\n            </header>\n            {!auth && !studentAuth && <Unauthenticated></Unauthenticated>}\n\n            {/* STUDENT USER VIEW */}\n            {/* This view will allow students to search resumes, and upload their own */}\n            {/* Students will have Read and Updates access to all resume tables */}\n            {studentAuth && <Box m={6} pl={4} pr={4}>\n                <Box mt={2} mb={2} pt={4}>\n                    <Button onClick={openPost} color=\"inherit\">Add Resume</Button>\n                </Box>\n                <Typography mt={2} mb={2} pb={3} id=\"modal-modal-title\" variant=\"h6\" component=\"h5\">\n                    Student Resumes\n                </Typography>\n                {approved != null &&\n                    <div style={{ height: 400, width: '100%' }}>\n                        <DataGrid components={{ Toolbar: QuickSearchToolbar }} rows={studentApprovedRows == null ? approved : studentApprovedRows}\n                            columns={studentApproved} pageSize={5} rowsPerPageOptions={[5]} checkboxSelection\n                            onSelectionModelChange={(id) => { setCurrentId(id[id.length - 1]) }} pb={2}\n                            componentsProps={{\n                                toolbar: {\n                                    value: searchText,\n                                    onChange: (event) => requestSearch(event.target.value, \"student\"),\n                                    clearSearch: () => requestSearch('', \"student\"),\n                                },\n                            }} />\n                    </div>}\n            </Box>}\n\n            {/* ADMIN USER VIEW */}\n            {/* This view will show all approved and pending resumes */}\n            {/* ADMINs will have CRUD access to all resume tables */}\n            {auth && <Box m={6} pl={4} pr={4}>\n                <Box mt={2} mb={2} pt={4}>\n                    <Button onClick={openPost} color=\"inherit\">Add Resume</Button>\n                </Box>\n                <Typography mt={2} mb={2} pb={3} id=\"modal-modal-title\" variant=\"h6\" component=\"h5\">\n                    Approved Resumes\n                </Typography>\n                {approved != null &&\n                    <div style={{ height: 400, width: '100%' }}>\n                        <DataGrid\n                            components={{ Toolbar: QuickSearchToolbar }} rows={approvedFiltered == null ? approved : approvedFiltered}\n                            columns={columnsApproved} pageSize={5} owsPerPageOptions={[5]} checkboxSelection\n                            onSelectionModelChange={(id) => { setCurrentId(id[id.length - 1]) }} pb={2}\n                            componentsProps={{\n                                toolbar: {\n                                    value: searchText,\n                                    onChange: (event) => requestSearch(event.target.value, \"approved\"),\n                                    clearSearch: () => requestSearch('', \"approved\"),\n                                },\n                            }} />\n                    </div>}\n                <Typography mt={2} mb={2} pb={3} pt={3} id=\"modal-modal-title\" variant=\"h6\" component=\"h5\">\n                    Pending Resumes\n                </Typography>\n                {pending != null &&\n                    <div style={{ height: 400, width: '100%' }}>\n                        <DataGrid\n                            components={{ Toolbar: QuickSearchToolbar }} rows={pendingFiltered == null ? pending : pendingFiltered}\n                            columns={columnsPending} pageSize={5} rowsPerPageOptions={[5]} checkboxSelection\n                            onSelectionModelChange={(id) => { setCurrentId(id[id.length - 1]) }} pb={2}\n                            componentsProps={{\n                                toolbar: {\n                                    value: searchText,\n                                    onChange: (event) => requestSearch(event.target.value, \"pending\"),\n                                    clearSearch: () => requestSearch('', \"pending\"),\n                                },\n                            }} />\n                    </div>}\n\n            </Box>}\n            <footer>\n                <Box bgcolor=\"#2196f3\" color=\"white\" pl={4} pr={4}>\n                    <Box ml={2} mr={2} borderBottom={1} p={1}>\n                        <Typography mt={2} id=\"modal-modal-title\" variant=\"h6\" component=\"h5\">\n                            About\n                        </Typography>\n                    </Box>\n                    <Box ml={2} mr={2} pl={1} pr={1}>COMP 523 Project</Box>\n                    <Box ml={2} mr={2} pl={1} pr={1} pb={3}>Client: Honors Carolina</Box>\n                </Box>\n            </footer>\n        </div>\n    )\n}\n\n\n","import Main from './components/Main';\nimport { Box } from '@mui/system';\nimport './App.css';\n\nfunction App() {\n  return (\n      <Box>\n        <Main/>\n      </Box>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    dom rendering...\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}